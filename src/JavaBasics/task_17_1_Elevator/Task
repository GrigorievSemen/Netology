Задача 1. Лифт
Описание
Сегодня мы будем реализовывать программу для работы лифта 25-и этажного дома. Нужно написать программу, которая считывает данные из консоли, ожидая ввода номера этажа. После ввода каждого числа (номера этажа) добавляет значение в очередь дальнейшего перемещения лифта. Как только пользователь введет 0, программа должна последовательно вывести список всех этажей, на которых лифт делал остановки, в формате: "этаж 1 -> этаж 22 -> этаж 0". Если пользователь ввел этаж вне диапазона 0-25, проигнорировать ввод таких данных. Для реализации хранения введенных пользователем этажей отлично подойдет структура на основе интерфейса очередь (queue). По мере ввода мы сможем добавлять в конец очереди новые значения.

Функционал программы
Ввод номеров этажей
Вывод информации о посещенных этажах в порядке добавления в формате: "этаж 1 -> этаж 22 -> этаж 0".
Пример
Ожидаю ввода этажа: (для завершения введите 0)
5 <enter>
Ожидаю ввода этажа: (для завершения введите 0)
12 <enter>
Ожидаю ввода этажа: (для завершения введите 0)
38 <enter>
Такого этажа нет в доме
Ожидаю ввода этажа: (для завершения введите 0)
0 <enter>
Лифт проследовал по следующим этажам:
этаж 5 -> этаж 12 - этаж 0
Процесс реализации
В бесконечном цикле считывать номера этажей до тех пор, пока не будет введен нулевой этаж.
Перед каждым вводом запросить номер следующего этажа - вывести сообщение "Ожидаю ввода этажа: (для завершения введите 0)", чтобы пользователь понимал, что ему вводить.
Добавить проверку: если введенный этаж входит в диапазон допустимых значений 0-25, продолжить работу программы; а если не входит, то вывести на экран сообщение: "Такого этажа нет в доме".
Добавить проверку: если введенный этаж = 0, нужно выйти из цикла "чтение данных из консоли".
Если введенный этаж входит в диапазон 0-25, то нужно добавить значение в очередь и запросить ввод данных повторно.
Для вывода информации на экран, используя метод интерфейса Queue poll, прочитать последовательно все значения и вывести на экран.
* Дополнительное задание: рассчитать время движения лифта.
После ввода нулевого этажа, программа должна рассчитать время движения лифта вместе с остановками. Скорость движения лифта между парой этажей равна 5 секунд, время остановки на открытие и закрытие дверей лифта 10 секунд. Вывести информацию, сколько времени потребовалось лифту, чтобы пройти ранее введенные этажи.

Процесс реализации
Перед циклом вывода результата работы лифта нужно добавить несколько переменных: int waitDoorsInSeconds = 10 - количество секунд, которое потребуется на закрытие/открытие дверей; int waitMoveInSeconds = 5 - количество секунд, затрачиваемое лифтом на движение между этажами; int totalSeconds = 0 - всего потрачено времени на движение и остановки лифтом; int previousFloor = -1 - переменная для хранения предыдущей остановки.

В цикле проверяем, если previousFloor не равен -1, вычисляем разницу между текущим этажем и предыдущим и с помощью метода Math.abs найдем абсолютное значение (уберем знак) и умножим на время движения: totalSeconds += Math.abs(currentFloor - previousFloor) * waitMoveInSeconds

Добавим время открытия/закрытия дверей к totalSeconds: totalSeconds += waitDoorsInSeconds

После выхода из цикла выведем значение переменной totalSeconds на экран. System.out.println("Время затраченное лифтом на маршрут =: " + totalSeconds + " с.").

Завершим работу программы.

Инструкция по выполнению домашнего задания
Зарегистрируйтесь на сайте Repl.IT.
Перейдите в раздел my repls.
Нажмите кнопку Start coding now!, если приступаете впервые, или New Repl, если у вас уже есть работы.
В списке языков выберите Java.
Код пишите в левой части окна, вместо строки System.out.println("Hello world!");.
Опирайтесь на принятый стиль оформления кода.
Посмотреть результат выполнения файла можно, нажав на кнопку Run. Результат появится в правой части окна.
После окончания работы скопируйте ссылку на ваш repl в адресной строке браузера.
В личном кабинете на сайте netology.ru в поле комментария к домашней работе вставьте скопированную ссылку и отправьте работу на проверку.
Никаких файлов прикреплять не нужно.

Все задачи обязательны к выполнению для получения зачета. Присылать на проверку можно каждую задачу по отдельности или все задачи вместе. Во время проверки по частям ваша домашняя работа будет со статусом "На доработке".

Любые вопросы по решению задач задавайте в чате учебной группы.